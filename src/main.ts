import { bootstrapApplication } from '@angular/platform-browser';
import { AppComponent } from './app/app.component';
import { appConfig } from './app/app.config';
import { isDevMode } from '@angular/core';

console.log('üöÄ Iniciando aplicaci√≥n Music Explorer...');
console.log('üì± PWA habilitada: Service Worker configurado');

// Diagn√≥stico de Service Worker
if ('serviceWorker' in navigator) {
  console.log('‚úÖ API de Service Worker disponible en el navegador');
  
  window.addEventListener('load', () => {
    // Verificamos registros existentes
    navigator.serviceWorker.getRegistrations().then(registrations => {
      console.log(`Service Workers registrados actualmente: ${registrations.length}`);
      
      if (registrations.length > 0) {
        registrations.forEach(reg => {
          console.log(`- SW registrado en: ${reg.scope}`);
          // Verificar estado
          console.log(`- Estado: ${reg.active ? 'activo' : 'inactivo'}`);
          // Verificar modos
          console.log(`- Modo offline soportado: ${navigator.onLine ? 'online' : 'offline'}`);
        });
      }
    });
    
    // A√±adimos detecci√≥n de modo offline/online
    window.addEventListener('online', () => {
      console.log('üì∂ Aplicaci√≥n en modo ONLINE');
    });
    
    window.addEventListener('offline', () => {
      console.log('üì¥ Aplicaci√≥n en modo OFFLINE - usando cach√©');
    });
  });
} else {
  console.warn('‚ö†Ô∏è API de Service Worker no disponible en este navegador');
}

bootstrapApplication(AppComponent, appConfig)
  .catch(err => console.error('Error durante la inicializaci√≥n:', err));
